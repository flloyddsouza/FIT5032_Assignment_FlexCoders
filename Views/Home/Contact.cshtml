@model FlexCoders_Assignment.Models.SendEmailViewModel

@{
    ViewBag.Title = "Contact";
}

<div class="d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pt-3 pb-2 mb-3 border-bottom" style="height:100px;">
    <h1>Contact Us</h1>
</div>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()


    if (@ViewBag.Result != null)
    {
        <div class="alert alert-info">@ViewBag.Result</div>
    }


    <section class="mb-4">


        <!--Section description-->
        <p class="w-responsive mx-auto mb-5">
            Do you have any questions? Please do not hesitate to contact us directly. Our team will come back to you within
            a matter of hours to help you.
        </p>

        <div class="row form">

            <!--Grid column-->
            <div class="col-md-9 mb-md-0 mb-5">
                <form id="contact-form" name="contact-form" action="mail.php" method="POST">

                    <!--Grid row-->
                    <div class="row">

                        <div class="form-group col-md-6">
                            @Html.LabelFor(model => model.ToEmail, htmlAttributes: new { @class = "control-label col-md-4" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.ToEmail, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.ToEmail, "", new { @class = "text-danger" })
                            </div>
                        </div>

                    </div>


                    <div class="row">

                        <div class="form-group col-md-6">
                            @Html.LabelFor(model => model.Subject, htmlAttributes: new { @class = "control-label col-md-4" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.Subject, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Subject, "", new { @class = "text-danger" })
                            </div>
                        </div>


                    </div>


                    <div class="row">

                        <!--Grid column-->
                        <div class="form-group  col-md-9">
                            @Html.LabelFor(model => model.Contents, htmlAttributes: new { @class = "control-label col-md-4" })
                            <div class="col-md-10">
                                @Html.TextAreaFor(model => model.Contents, new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.Contents, "", new { @class = "text-danger" })
                            </div>
                        </div>


                    </div>


                    <div class="form-group">
                        <div class="col-md-offset-2 col-md-10">
                            <input type="submit" value="Send" class="btn btn-info" />
                        </div>
                    </div>


                </form>

                

              
            </div>
        </div>

    </section>
}

    @section Scripts {
        @Scripts.Render("~/bundles/jqueryval")
    }
