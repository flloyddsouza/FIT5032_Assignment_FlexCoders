@model IEnumerable<FlexCoders_Assignment.Models.Course>

@{
    ViewBag.Title = "Index";
}

<div class="d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pt-3 pb-2 mb-3 border-bottom" style="height:100px;">
    <h1>Courses</h1>
    <div class="btn-toolbar mb-2 mb-md-0">
        <div class="btn-group mr-2">

            @if (User.IsInRole("Administrator"))
            {
                <button type="button" class="btn btn-outline-secondary" onclick="location.href='@Url.Action("Create", "Courses")'">
                    <img width=20 style="margin-bottom:3px; margin-right:5px" src="https://cdn3.iconfinder.com/data/icons/google-material-design-icons/48/ic_add_48px-512.png" />
                    New Course
                </button>
            }

        </div>
    </div>
</div>


@if (User.IsInRole("Administrator"))
{
    <canvas id="myChart" width="300" height="100"></canvas>
}

    <main role="main">



        <div class="album py-5 bg-light">
            <div class="container">
                <div class="row">
                    @foreach (var item in Model)
                    {



                        <div class="col-md-4 course">

                            <div class="difficultyType" hidden>
                                @item.DifficultyLevel
                            </div>
                            <a href="@Url.Action("Details", "Courses", new { id = item.Id })">
                                <div class="card mb-4 shadow-sm">
                                    <img class="card-img-top" src=@item.ImageURL width="100%" height="150" xmlns="http://www.w3.org/2000/svg" preserveAspectRatio="xMidYMid slice" focusable="false" role="img" aria-label="Placeholder: Thumbnail">
                                    <div class="card-body">
                                        <p class="card-text" style="color:black;">@item.CourseName</p>
                                        <div class="d-flex justify-content-between align-items-center">
                                            <small class="text-muted">By @item.Contributers</small>
                                        </div>
                                    </div>
                                </div>
                            </a>
                        </div>

                    }
                </div>
            </div>
        </div>

    </main>

    @section Scripts {
        <script src="https://cdn.jsdelivr.net/npm/chart.js@2.9.4/dist/Chart.min.js"></script>
        <script>
            var Beginners = 0;
            var intermediate = 0;
            var Difficult = 0;


            $(".course").each(function () {
                var difficultyType = $(".difficultyType", this).text().trim();

                if (difficultyType == "Beginners") {
                    Beginners = Beginners + 1;
                }


                if (difficultyType == "Intermediate") {
                    intermediate = intermediate + 1;
                }

                if (difficultyType == "Difficult") {
                    Difficult = Difficult + 1;
                }


            });



            var ctx = document.getElementById('myChart').getContext('2d');
            var myChart = new Chart(ctx, {
                type: 'bar',
                data: {
                    labels: ['Beginners', 'Imtermediate', 'Difficult'],
                    datasets: [{
                        label: 'Number of Courses',
                        data: [Beginners, intermediate, Difficult],
                        backgroundColor: [
                            'rgba(255, 99, 132, 0.2)',
                            'rgba(54, 162, 235, 0.2)',
                            'rgba(255, 206, 86, 0.2)',
                            'rgba(75, 192, 192, 0.2)',
                            'rgba(153, 102, 255, 0.2)',
                            'rgba(255, 159, 64, 0.2)'
                        ],
                        borderColor: [
                            'rgba(255, 99, 132, 1)',
                            'rgba(54, 162, 235, 1)',
                            'rgba(255, 206, 86, 1)',
                            'rgba(75, 192, 192, 1)',
                            'rgba(153, 102, 255, 1)',
                            'rgba(255, 159, 64, 1)'
                        ],
                        borderWidth: 1
                    }]
                },
                options: {
                    scales: {
                        yAxes: [{
                            ticks: {
                                beginAtZero: true
                            }
                        }]
                    }
                }
            });
        </script>


    }