@model FlexCoders_Assignment.Models.Workshop

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pt-3 pb-2 mb-3 border-bottom" style="height:100px;">
    <h1>New Workshop</h1>
</div>


<div class="row">
    <div class="text-left col-md-7">
        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()
            <div class="form-horizontal needs-validation" novalidate>


                <div class="form-group">
                    @Html.LabelFor(model => model.WorkshopName, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.WorkshopName, new { htmlAttributes = new { @class = "form-control", @Placeholder = "Eg. Python Workshop" } })
                        @Html.ValidationMessageFor(model => model.WorkshopName, "", new { @class = "text-danger" })

                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.WorkShopDescription, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-10">
                        @Html.TextAreaFor(model => model.WorkShopDescription, new { cols = 35, @rows = 3, @class = "form-control", @Placeholder = "Enter Description here." })
                        @Html.ValidationMessageFor(model => model.WorkShopDescription, "", new { @class = "text-danger" })
                    </div>

                </div>



                <div class="form-group">
                    @Html.LabelFor(model => model.WorkshopDateTime, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.WorkshopDateTime, new { htmlAttributes = new { @class = "form-control", Type= "datetime-local" } })
                        @Html.ValidationMessageFor(model => model.WorkshopDateTime, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.City, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.City, new { htmlAttributes = new { @class = "form-control", @Placeholder = "Eg. Melbourne" } })
                        @Html.ValidationMessageFor(model => model.City, "", new { @class = "text-danger" })
                    </div>
                </div>


                <div class="form-group">
                    @Html.LabelFor(model => model.Lat, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Lat, new { htmlAttributes = new { @class = "form-control", @Placeholder = "Eg. -37.877458" } })
                        @Html.ValidationMessageFor(model => model.Lat, "", new { @class = "text-danger" })
                    </div>
                </div>


                <div class="form-group">
                    @Html.LabelFor(model => model.Long, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Long, new { htmlAttributes = new { @class = "form-control", @Placeholder = "Eg. 145.043766" } })
                        @Html.ValidationMessageFor(model => model.Long, "", new { @class = "text-danger" })
                    </div>
                </div>


                <div class="form-group">
                    @Html.LabelFor(model => model.Capicity, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Capicity, new { htmlAttributes = new { @class = "form-control", @Placeholder = "Eg. 100" } })
                        @Html.ValidationMessageFor(model => model.Capicity, "", new { @class = "text-danger" })
                    </div>
                </div>


                <div class="form-group">
                    @Html.LabelFor(model => model.ImageURL, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.ImageURL, new { htmlAttributes = new { @class = "form-control", @Placeholder = "Enter a Image URL" } })
                        @Html.ValidationMessageFor(model => model.ImageURL, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group d-flex flex-row-reverse">
                    <div class="p-2 col-md-4">
                        <input type="submit" value="Create" style="width:70px;" class="btn btn-primary" />
                    </div>
                </div>


            </div>
             
        }
        </div>
    </div>

    <div>
        @Html.ActionLink("Back to List", "Index")
    </div>

    @section Scripts {
        @Scripts.Render("~/bundles/jqueryval")
      
    }
